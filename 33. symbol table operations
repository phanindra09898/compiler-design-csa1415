33. Implement a C program to perform symbol table operations.


#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#define MAX_SYMBOLS 100
typedef struct {
    char name[50];
    char type[20];
    int size;
    int scope;
} Symbol;
Symbol symbolTable[MAX_SYMBOLS];
int symbolCount = 0;
void insertSymbol(char* name, char* type, int size, int scope) {
    for (int i = 0; i < symbolCount; i++) {
        if (strcmp(symbolTable[i].name, name) == 0) {
            printf("Symbol '%s' already exists in the table.\n", name);
            return;
        }
    }
    strcpy(symbolTable[symbolCount].name, name);
    strcpy(symbolTable[symbolCount].type, type);
    symbolTable[symbolCount].size = size;
    symbolTable[symbolCount].scope = scope;
    symbolCount++;
    printf("Symbol '%s' inserted successfully.\n", name);
}
void searchSymbol(char* name) {
    for (int i = 0; i < symbolCount; i++) {
        if (strcmp(symbolTable[i].name, name) == 0) {
            printf("Symbol Found:\n");
            printf("Name: %s, Type: %s, Size: %d, Scope: %d\n",
                   symbolTable[i].name, symbolTable[i].type,
                   symbolTable[i].size, symbolTable[i].scope);
            return;
        }
    }
    printf("Symbol '%s' not found in the table.\n", name);
}
void displaySymbolTable() {
    if (symbolCount == 0) {
        printf("Symbol table is empty.\n");
        return;
    }
    printf("Symbol Table:\n");
    printf("--------------------------------------------------\n");
    printf("Name\t\tType\t\tSize\tScope\n");
    printf("--------------------------------------------------\n");
    for (int i = 0; i < symbolCount; i++) {
        printf("%s\t\t%s\t\t%d\t%d\n",
               symbolTable[i].name, symbolTable[i].type,
               symbolTable[i].size, symbolTable[i].scope);
    }
}
int main() {
    int choice;
    char name[50], type[20];
    int size, scope;

    while (1) {
        printf("\nSymbol Table Operations:\n");
        printf("1. Insert Symbol\n");
        printf("2. Search Symbol\n");
        printf("3. Display Symbol Table\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter symbol name: ");
                scanf("%s", name);
                printf("Enter symbol type: ");
                scanf("%s", type);
                printf("Enter symbol size: ");
                scanf("%d", &size);
                printf("Enter symbol scope: ");
                scanf("%d", &scope);
                insertSymbol(name, type, size, scope);
                break;
            case 2:
                printf("Enter symbol name to search: ");
                scanf("%s", name);
                searchSymbol(name);
                break;
            case 3:
                displaySymbolTable();
                break;
            case 4:
                printf("Exiting...\n");
                exit(0);
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }
    return 0;
}
